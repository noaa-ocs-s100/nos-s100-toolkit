#################
NOS S-100 Toolkit
#################

A Python toolkit for downloading National Oceanic and Atmospheric
Administration (NOAA)/National Ocean Service (NOS) datasets and encoding
in International Hydrographic Organization (IHO)
`S-100 <http://s100.iho.int/S100/>`_ data formats.

Overview
========
These scripts download NOS Ocean Model NetCDF Forecast files hosted on the
NOAA Operational Model Archive and Distribution System (NOMADS) and on the NOAA
CO-OPS THREDDS Data Server and use the
`thyme <https://github.com/noaa-ocs-modeling/thyme>`_ and
`s100py <https://github.com/noaa-ocs-s100/s100py>`_ libraries to
interpolate its surface current forecasts to a regular grid and encode the
result in S-100/S-111 compliant HDF5 files.

S-111 is an IHO standard outlining formats for storing and sending surface
water current data and metadata and is designed for interoperability with
Electronic Navigation Charts.

Features
========
- Download NOAA/NOS Operational Forecast System (OFS) NetCDF files
- Given a target resolution and optionally a subgrid shapefile, generate a
  regular grid definition and save to a thyme Model Index NetCDF file
- Process a full OFS forecast run (0 to 48+ hours) and encode the result into
  IHO S-111 format (a single HDF-5 file containing all forecast projections)
  on a regular grid
- Chop S-111 output into smaller sub-grids to reduce file sizes
- Calculate water currents at any depth-below-surface

Index File Data/Functionality
=============================
For information about the model index files used by these scripts, see the
`thyme <https://github.com/noaa-ocs-modeling/thyme>`_ documentation.

Supported Models
================
These scripts presently support the following hydrodynamic modeling systems:
- NCEP Real-Time Ocean Forecast System (RTOFS)
- NOS Chesapeake Bay Operational Forecast System (CBOFS)
- NOS Delaware Bay Operational Forecast System (DBOFS)
- NOS Gulf of Maine Operational Forecast System (GoMOFS)
- NOS Lake Erie Operational Forecast System (LEOFS)
- NOS Lake Huron Operational Forecast System (LHOFS)
- NOS Lake Michigan Operational Forecast System (LMOFS)
- NOS Lake Ontario Operational Forecast System (LOOFS)
- NOS Lake Superior Operational Forecast System (LSOFS)
- NOS New York/New Jersey Harbor Operational Forecast System (NYOFS)
- NOS Northeast Gulf of Mexico Operational Forecast System (NEGOFS)
- NOS Northern Gulf of Mexico Operational Forecast System (NGOFS)
- NOS Northwest Gulf of Mexico Operational Forecast System (NWGOFS)
- NOS San Francisco Bay Operational Forecast System (SFBOFS)
- NOS Tampa Bay Operational Forecast System (TBOFS)
- NOS West Coast Operational Forecast System (WCOFS)

Requirements
============
This codebase relies on the following Python packages:

- `s100py <https://github.com/noaa-ocs-s100/s100py>`_
- `thyme <https://github.com/noaa-ocs-modeling/thyme>`_

However, the above packages rely on a number of additional packages that must
be installed first, including ``h5py``, ``netCDF4``, ``numpy``, ``scipy``,
``gdal``, and ``shapely``, which must be installed first.

Instructions for installing these prerequisites can be found on the project
pages linked above, however a preconfigured conda environment file is provided
in this repository that can be used to install all dependencies quickly. To go
this route, you must first install Miniconda.

For instructions downloading/installing Miniconda, please reference the
`official documentation <https://docs.conda.io/en/latest/miniconda.html>`_.

Instructions for configuring your conda environment can be found in the
following sections.

Quick Start
===========
If you just want to get something running and don't care about setting up an
operational environment, the minimum steps required are as follows (this will
clone the repository, automatically download the latest available CBOFS model
output [into a 'cbofs' subdirectory], and convert to a single S-111 HDF5 file
[also in the 'cbofs' subdirectory]):

- Clone the repository and create/activate the conda environment:

  .. code-block:: bash

      git clone https://github.com/noaa-ocs-s100/nos-s100-toolkit
      cd ofs-s100-hdf5
      conda create --name nos-s100 --file nos-s100_conda_env.txt
      conda activate nos-s100

- Download the `cbofs_index_default_500m.nc` CBOFS index NetCDF file from the
  location identified on the project wiki at https://vlab.ncep.noaa.gov/redmine/projects/ofs-s100-hdf5/wiki
  into the project directory

- Run the ``ofs.py`` script:

  .. code-block:: bash

      ./ofs.py -o cbofs -i cbofs_index_default_500m.nc -s . -d . -code 2

Full Configuration
==================
Use the following steps to create a more resilient/operational environment.

- Create a parent directory that will contain the code and all other files that
  will be used or generated by this package. Ensure that the directory has
  appropriate user/group ownership and read/write/execute permissions settings
  that will allow the code to be checked out and run. For simplicity, this
  example assumes that directory is under the user's home directory.

    - ``mkdir ~/nos-s100-toolkit``

- Create a subdirectory that will store log output:

    - ``mkdir ~/nos-s100-toolkit/log``

- Create a subdirectory that will store the NetCDF index files

    - ``mkdir ~/nos-s100-toolkit/indexes``
    - Copy existing index files, if any, to this directory

- Create a subdirectory that will store downloaded model NetCDF files

    - ``mkdir ~/nos-s100-toolkit/netcdf``

- Create a subdirectory that will store generated S-111 HDF5 output files

    - ``mkdir ~/nos-s100-toolkit/hdf5``

- Create a subdirectory that will store shoreline and/or subgrid shapefiles.
  This is only required when generating new NetCDF index files. Make sure that
  any shapefiles being used have coverage for the model domain(s) you will be
  working with.

    - ``mkdir ~/nos-s100-toolkit/shp``
    - Copy the shapefiles, if any, to this directory.

- Clone the repository to a new ``src`` subdirectory:

    - ``git clone https://github.com/noaa-ocs-s100/nos-s100-toolkit ~/nos-s100-toolkit/src``
    - Ensure that ``ofs.py`` is executable. If not, run ``chmod gou+x ~/nos-s100-toolkit/src/ofs.py``.

- Ensure the new ``src`` directory is in your ``$PATH`` environment variable:

    - ``export PATH=$PATH:~/nos-s100-toolkit/src``

- Create and configure a new conda environment from the conda environment file
  supplied with the code (this will download and install all required
  packages):

    - ``conda create --name nos-s100 --file nos-s100_conda_env.txt``

Execution
=========

- Activate your new conda environment (once activated, conda prepends the
  environment name s111ofs onto your system command prompt)

    - ``conda activate nos-s100``

- To print detailed usage information:

    - ``ofs.py -h``

- If you already have a NetCDF index file for the target model:

    - To download and convert the latest full OFS forecast run to S-111 format

        - ``ofs.py -i ~/nos-s100-toolkit/indexes/cbofs_index_default_500.nc -s ~/nos-s100-toolkit/hdf5 -d ~/nos-s100-toolkit/netcdf -o cbofs -code 2``

    - To skip the download and convert existing OFS forecast file to S-111
      format

        - ``ofs.py -i ~/nos-s100-toolkit/indexes/cbofs_index_default_500.nc -s ~/nos-s100-toolkit/hdf5 -m ~/nos-s100-toolkit/netcdf/cbofs/nos.cbofs.fields.f001.20180323.t12z.nc -o cbofs -c 2018032312 -code 2``

If existing index files are not supplied, or you need to generate a new index
file for a particular model at a particular resolution, use the following
steps. Keep in mind that larger model domains and higher resolutions will take
longer to generate.

- Download any model output NetCDF file and place in the `netcdf` subdirectory,
  e.g.:

    - ``cd ~/nos-s100-toolkit/netcdf``
    - ``wget https://opendap.co-ops.nos.noaa.gov/thredds/fileServer/NOAA/CBOFS/MODELS/201903/nos.cbofs.fields.f001.20190323.t12z.nc``
      (modify the model names, forecast hour and timestamp as necessary)

- Using the downloaded NetCDF file and subgrid/shoreline shapefiles, if
  desired, generate the new index file. Examples:

    - Create a "default grid" index NetCDF file (a single grid matching the
      envelope of the target OFS) for CBOFS with a target cellsize of 500
      meters, requires a shoreline shapefile

        - ``ofs.py -i ~/nos-s100-toolkit/indexes/cbofs_index_default_500.nc -b -l ~/nos-s100-toolkit/shp/nos80k.shp -m ~/nos-s100-toolkit/netcdf/cbofs.nos.fields.f001.20180323.t12z.nc -o cbofs -t 500 -code 2``

    - Create a "subgrid" index NetCDF file, requires an orthogonal grid shapefile,
      if using another grid shapefile, alter shapefile name and field name below
      (matching the envelope of any subgrid polygons from the supplied shapefile
      which intersect with the model domain and contains each subgrids spatial extent,
      id and name if specified)

        - ``ofs.py -i ~/nos-s100-toolkit/indexes/cbofs_index_subset_500.nc -b -l ~/nos-s100-toolkit/shp/nos80k.shp -g ~/nos-s100-toolkit/shp/All_Band4_V4.shp -f CellName -m ~/nos-s100-toolkit/netcdf/cbofs.nos.fields.f001.20180323.t12z.nc -o cbofs -t 500 -code 2``


Authors
=======
- Erin Nagel (UCAR), erin.nagel@noaa.gov
- Jason Greenlaw (ERT), jason.greenlaw@noaa.gov

License
=======
This project is licensed under the
`Creative Commons Zero 1.0 <https://creativecommons.org/publicdomain/zero/1.0/>`_
public domain dedication. See `LICENSE <LICENSE>`_ for more information.

Disclaimer
==========
This repository is a scientific product and is not official communication of
the National Oceanic and Atmospheric Administration, or the United States
Department of Commerce. All NOAA GitHub project code is provided on an ‘as is’
basis and the user assumes responsibility for its use. Any claims against the
Department of Commerce or Department of Commerce bureaus stemming from the use
of this GitHub project will be governed by all applicable Federal law. Any
reference to specific commercial products, processes, or services by service
mark, trademark, manufacturer, or otherwise, does not constitute or imply their
endorsement, recommendation or favoring by the Department of Commerce. The
Department of Commerce seal and logo, or the seal and logo of a DOC bureau,
shall not be used in any manner to imply endorsement of any commercial product
or activity by DOC or the United States Government.

Acknowledgments
===============
This software has been developed by the National Oceanic and Atmospheric
Administration (NOAA)/National Ocean Service (NOS)/Office of Coast Survey
(OCS)/Coast Survey Development Lab (CSDL) for use by the scientific and
oceanographic communities.

CSDL wishes to thank the following entities for their assistance:

- NOAA/NOS/Center for Operational Oceanographic Products and Services (CO-OPS)

